{"remainingRequest":"/home/loboda/Andrey/frontend/learn/vuex/node_modules/babel-loader/lib/index.js!/home/loboda/Andrey/frontend/learn/vuex/src/store/modules/post.js","dependencies":[{"path":"/home/loboda/Andrey/frontend/learn/vuex/src/store/modules/post.js","mtime":1585827927766},{"path":"/home/loboda/Andrey/frontend/learn/vuex/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/loboda/Andrey/frontend/learn/vuex/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL2xvYm9kYS9BbmRyZXkvZnJvbnRlbmQvbGVhcm4vdnVleC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmV4cG9ydCBkZWZhdWx0IHsKICBhY3Rpb25zOiB7CiAgICBmZXRjaFBvc3RzOiBmdW5jdGlvbiBmZXRjaFBvc3RzKGN0eCkgewogICAgICB2YXIgX2FyZ3VtZW50cyA9IGFyZ3VtZW50czsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgbGltaXQsIHJlcywgcG9zdHM7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgbGltaXQgPSBfYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgX2FyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gX2FyZ3VtZW50c1sxXSA6ICczJzsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgICAgcmV0dXJuIGZldGNoKCdodHRwczovL2pzb25wbGFjZWhvbGRlci50eXBpY29kZS5jb20vcG9zdHM/X2xpbWl0PScgKyBsaW1pdCk7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgIHJlcyA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNjsKICAgICAgICAgICAgICAgIHJldHVybiByZXMuanNvbigpOwoKICAgICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgICAgICBwb3N0cyA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICBjdHguY29tbWl0KCd1cGRhdGVQb3N0cycsIHBvc3RzKTsKCiAgICAgICAgICAgICAgY2FzZSA4OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfQogIH0sCiAgbXV0YXRpb25zOiB7CiAgICB1cGRhdGVQb3N0czogZnVuY3Rpb24gdXBkYXRlUG9zdHMoc3RhdGUsIHBvc3RzKSB7CiAgICAgIHN0YXRlLnBvc3RzID0gcG9zdHM7CiAgICB9LAogICAgY3JlYXRlUG9zdDogZnVuY3Rpb24gY3JlYXRlUG9zdChzdGF0ZSwgbmV3UG9zdCkgewogICAgICBzdGF0ZS5wb3N0cy51bnNoaWZ0KG5ld1Bvc3QpOwogICAgfQogIH0sCiAgc3RhdGU6IHsKICAgIHBvc3RzOiBbXQogIH0sCiAgZ2V0dGVyczogewogICAgdmFsaWRQb3N0czogZnVuY3Rpb24gdmFsaWRQb3N0cyhzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUucG9zdHMuZmlsdGVyKGZ1bmN0aW9uIChwKSB7CiAgICAgICAgcmV0dXJuIHAudGl0bGUgJiYgcC5ib2R5OwogICAgICB9KTsKICAgIH0sCiAgICBhbGxQb3N0czogZnVuY3Rpb24gYWxsUG9zdHMoc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLnBvc3RzOwogICAgfSwKICAgIHBvc3RzQ291bnQ6IGZ1bmN0aW9uIHBvc3RzQ291bnQoc3RhdGUsIGdldHRlcnMpIHsKICAgICAgcmV0dXJuIGdldHRlcnMuYWxsUG9zdHMubGVuZ3RoOwogICAgfQogIH0KfTs="},{"version":3,"sources":["/home/loboda/Andrey/frontend/learn/vuex/src/store/modules/post.js"],"names":["actions","fetchPosts","ctx","limit","fetch","res","json","posts","commit","mutations","updatePosts","state","createPost","newPost","unshift","getters","validPosts","filter","p","title","body","allPosts","postsCount","length"],"mappings":";;;;AAAA,eAAgB;AACdA,EAAAA,OAAO,EAAE;AACDC,IAAAA,UADC,sBACUC,GADV,EAC4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAbC,gBAAAA,KAAa,0EAAL,GAAK;AAAA;AAAA,uBACfC,KAAK,CAAC,uDAAuDD,KAAxD,CADU;;AAAA;AAC3BE,gBAAAA,GAD2B;AAAA;AAAA,uBAEbA,GAAG,CAACC,IAAJ,EAFa;;AAAA;AAE3BC,gBAAAA,KAF2B;AAGjCL,gBAAAA,GAAG,CAACM,MAAJ,CAAW,aAAX,EAA0BD,KAA1B;;AAHiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIlC;AALM,GADK;AAQdE,EAAAA,SAAS,EAAE;AACTC,IAAAA,WADS,uBACGC,KADH,EACUJ,KADV,EACiB;AACxBI,MAAAA,KAAK,CAACJ,KAAN,GAAcA,KAAd;AACD,KAHQ;AAITK,IAAAA,UAJS,sBAIED,KAJF,EAISE,OAJT,EAIkB;AACzBF,MAAAA,KAAK,CAACJ,KAAN,CAAYO,OAAZ,CAAoBD,OAApB;AACD;AANQ,GARG;AAgBdF,EAAAA,KAAK,EAAE;AACLJ,IAAAA,KAAK,EAAE;AADF,GAhBO;AAmBdQ,EAAAA,OAAO,EAAE;AACPC,IAAAA,UADO,sBACIL,KADJ,EACW;AAChB,aAAOA,KAAK,CAACJ,KAAN,CAAYU,MAAZ,CAAmB,UAAAC,CAAC,EAAI;AAC7B,eAAOA,CAAC,CAACC,KAAF,IAAWD,CAAC,CAACE,IAApB;AACD,OAFM,CAAP;AAGD,KALM;AAMPC,IAAAA,QANO,oBAMEV,KANF,EAMS;AACd,aAAOA,KAAK,CAACJ,KAAb;AACD,KARM;AASPe,IAAAA,UATO,sBASIX,KATJ,EASWI,OATX,EASoB;AAEzB,aAAOA,OAAO,CAACM,QAAR,CAAiBE,MAAxB;AACD;AAZM;AAnBK,CAAhB","sourcesContent":["export default  {\n  actions: {\n    async fetchPosts(ctx, limit = '3') {\n      const res = await fetch('https://jsonplaceholder.typicode.com/posts?_limit=' + limit)\n      const posts = await res.json();\n      ctx.commit('updatePosts', posts)\n    }\n  },\n  mutations: {\n    updatePosts(state, posts) {\n      state.posts = posts\n    },\n    createPost(state, newPost) {\n      state.posts.unshift(newPost);\n    }\n  },\n  state: {\n    posts: []\n  },\n  getters: {\n    validPosts(state) {\n      return state.posts.filter(p => {\n        return p.title && p.body\n      })\n    },\n    allPosts(state) {\n      return state.posts\n    },\n    postsCount(state, getters) {\n\n      return getters.allPosts.length;\n    }\n  },\n};"]}]}